Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA

Grammar

Rule 0     S' -> program
Rule 1     program -> include function
Rule 2     include -> INCLUDE LT LIBRARY GT
Rule 3     function -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE
Rule 4     statements -> statement
Rule 5     statements -> statement statements
Rule 6     statement -> declaration
Rule 7     statement -> assignment
Rule 8     statement -> for_statement
Rule 9     statement -> return_statement
Rule 10    declaration -> INT ID ASSIGN NUMBER SEMICOLON
Rule 11    assignment -> ID ASSIGN expression SEMICOLON
Rule 12    for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE
Rule 13    condition -> ID LT NUMBER
Rule 14    condition -> ID LE NUMBER
Rule 15    condition -> ID GT NUMBER
Rule 16    condition -> ID GE NUMBER
Rule 17    condition -> ID EQ NUMBER
Rule 18    condition -> ID NE NUMBER
Rule 19    increment -> ID PLUS PLUS
Rule 20    return_statement -> RETURN NUMBER SEMICOLON
Rule 21    expression -> NUMBER
Rule 22    expression -> ID MULT_OP NUMBER
Rule 23    expression -> ID PLUS ID

Terminals, with rules where they appear

ASSIGN               : 10 11
COMMA                : 
EQ                   : 17
FOR                  : 12
GE                   : 16
GT                   : 2 15
ID                   : 10 11 13 14 15 16 17 18 19 22 23 23
INCLUDE              : 2
INT                  : 3 10
LBRACE               : 3 12
LE                   : 14
LIBRARY              : 2
LPAREN               : 3 12
LT                   : 2 13
MAIN                 : 3
MULT_OP              : 22
NE                   : 18
NUMBER               : 10 13 14 15 16 17 18 20 21 22
PLUS                 : 19 19 23
RBRACE               : 3 12
RETURN               : 20
RPAREN               : 3 12
SEMICOLON            : 10 11 12 20
error                : 

Nonterminals, with rules where they appear

assignment           : 7 12
condition            : 12
declaration          : 6
expression           : 11
for_statement        : 8
function             : 1
include              : 1
increment            : 12
program              : 0
return_statement     : 9
statement            : 4 5
statements           : 3 5 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . include function
    (2) include -> . INCLUDE LT LIBRARY GT

    INCLUDE         shift and go to state 3

    program                        shift and go to state 1
    include                        shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> include . function
    (3) function -> . INT MAIN LPAREN RPAREN LBRACE statements RBRACE

    INT             shift and go to state 5

    function                       shift and go to state 4

state 3

    (2) include -> INCLUDE . LT LIBRARY GT

    LT              shift and go to state 6


state 4

    (1) program -> include function .

    $end            reduce using rule 1 (program -> include function .)


state 5

    (3) function -> INT . MAIN LPAREN RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 7


state 6

    (2) include -> INCLUDE LT . LIBRARY GT

    LIBRARY         shift and go to state 8


state 7

    (3) function -> INT MAIN . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 9


state 8

    (2) include -> INCLUDE LT LIBRARY . GT

    GT              shift and go to state 10


state 9

    (3) function -> INT MAIN LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 11


state 10

    (2) include -> INCLUDE LT LIBRARY GT .

    INT             reduce using rule 2 (include -> INCLUDE LT LIBRARY GT .)


state 11

    (3) function -> INT MAIN LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 12


state 12

    (3) function -> INT MAIN LPAREN RPAREN LBRACE . statements RBRACE
    (4) statements -> . statement
    (5) statements -> . statement statements
    (6) statement -> . declaration
    (7) statement -> . assignment
    (8) statement -> . for_statement
    (9) statement -> . return_statement
    (10) declaration -> . INT ID ASSIGN NUMBER SEMICOLON
    (11) assignment -> . ID ASSIGN expression SEMICOLON
    (12) for_statement -> . FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (20) return_statement -> . RETURN NUMBER SEMICOLON

    INT             shift and go to state 13
    ID              shift and go to state 20
    FOR             shift and go to state 21
    RETURN          shift and go to state 22

    statements                     shift and go to state 14
    statement                      shift and go to state 15
    declaration                    shift and go to state 16
    assignment                     shift and go to state 17
    for_statement                  shift and go to state 18
    return_statement               shift and go to state 19

state 13

    (10) declaration -> INT . ID ASSIGN NUMBER SEMICOLON

    ID              shift and go to state 23


state 14

    (3) function -> INT MAIN LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 24


state 15

    (4) statements -> statement .
    (5) statements -> statement . statements
    (4) statements -> . statement
    (5) statements -> . statement statements
    (6) statement -> . declaration
    (7) statement -> . assignment
    (8) statement -> . for_statement
    (9) statement -> . return_statement
    (10) declaration -> . INT ID ASSIGN NUMBER SEMICOLON
    (11) assignment -> . ID ASSIGN expression SEMICOLON
    (12) for_statement -> . FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (20) return_statement -> . RETURN NUMBER SEMICOLON

    RBRACE          reduce using rule 4 (statements -> statement .)
    INT             shift and go to state 13
    ID              shift and go to state 20
    FOR             shift and go to state 21
    RETURN          shift and go to state 22

    statement                      shift and go to state 15
    statements                     shift and go to state 25
    declaration                    shift and go to state 16
    assignment                     shift and go to state 17
    for_statement                  shift and go to state 18
    return_statement               shift and go to state 19

state 16

    (6) statement -> declaration .

    INT             reduce using rule 6 (statement -> declaration .)
    ID              reduce using rule 6 (statement -> declaration .)
    FOR             reduce using rule 6 (statement -> declaration .)
    RETURN          reduce using rule 6 (statement -> declaration .)
    RBRACE          reduce using rule 6 (statement -> declaration .)


state 17

    (7) statement -> assignment .

    INT             reduce using rule 7 (statement -> assignment .)
    ID              reduce using rule 7 (statement -> assignment .)
    FOR             reduce using rule 7 (statement -> assignment .)
    RETURN          reduce using rule 7 (statement -> assignment .)
    RBRACE          reduce using rule 7 (statement -> assignment .)


state 18

    (8) statement -> for_statement .

    INT             reduce using rule 8 (statement -> for_statement .)
    ID              reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    RBRACE          reduce using rule 8 (statement -> for_statement .)


state 19

    (9) statement -> return_statement .

    INT             reduce using rule 9 (statement -> return_statement .)
    ID              reduce using rule 9 (statement -> return_statement .)
    FOR             reduce using rule 9 (statement -> return_statement .)
    RETURN          reduce using rule 9 (statement -> return_statement .)
    RBRACE          reduce using rule 9 (statement -> return_statement .)


state 20

    (11) assignment -> ID . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 26


state 21

    (12) for_statement -> FOR . LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 27


state 22

    (20) return_statement -> RETURN . NUMBER SEMICOLON

    NUMBER          shift and go to state 28


state 23

    (10) declaration -> INT ID . ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 29


state 24

    (3) function -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 3 (function -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE .)


state 25

    (5) statements -> statement statements .

    RBRACE          reduce using rule 5 (statements -> statement statements .)


state 26

    (11) assignment -> ID ASSIGN . expression SEMICOLON
    (21) expression -> . NUMBER
    (22) expression -> . ID MULT_OP NUMBER
    (23) expression -> . ID PLUS ID

    NUMBER          shift and go to state 32
    ID              shift and go to state 30

    expression                     shift and go to state 31

state 27

    (12) for_statement -> FOR LPAREN . assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (11) assignment -> . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 20

    assignment                     shift and go to state 33

state 28

    (20) return_statement -> RETURN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 34


state 29

    (10) declaration -> INT ID ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 35


state 30

    (22) expression -> ID . MULT_OP NUMBER
    (23) expression -> ID . PLUS ID

    MULT_OP         shift and go to state 36
    PLUS            shift and go to state 37


state 31

    (11) assignment -> ID ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 38


state 32

    (21) expression -> NUMBER .

    SEMICOLON       reduce using rule 21 (expression -> NUMBER .)


state 33

    (12) for_statement -> FOR LPAREN assignment . condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (13) condition -> . ID LT NUMBER
    (14) condition -> . ID LE NUMBER
    (15) condition -> . ID GT NUMBER
    (16) condition -> . ID GE NUMBER
    (17) condition -> . ID EQ NUMBER
    (18) condition -> . ID NE NUMBER

    ID              shift and go to state 40

    condition                      shift and go to state 39

state 34

    (20) return_statement -> RETURN NUMBER SEMICOLON .

    INT             reduce using rule 20 (return_statement -> RETURN NUMBER SEMICOLON .)
    ID              reduce using rule 20 (return_statement -> RETURN NUMBER SEMICOLON .)
    FOR             reduce using rule 20 (return_statement -> RETURN NUMBER SEMICOLON .)
    RETURN          reduce using rule 20 (return_statement -> RETURN NUMBER SEMICOLON .)
    RBRACE          reduce using rule 20 (return_statement -> RETURN NUMBER SEMICOLON .)


state 35

    (10) declaration -> INT ID ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 41


state 36

    (22) expression -> ID MULT_OP . NUMBER

    NUMBER          shift and go to state 42


state 37

    (23) expression -> ID PLUS . ID

    ID              shift and go to state 43


state 38

    (11) assignment -> ID ASSIGN expression SEMICOLON .

    INT             reduce using rule 11 (assignment -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 11 (assignment -> ID ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 11 (assignment -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 11 (assignment -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 11 (assignment -> ID ASSIGN expression SEMICOLON .)


state 39

    (12) for_statement -> FOR LPAREN assignment condition . SEMICOLON increment RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 44


state 40

    (13) condition -> ID . LT NUMBER
    (14) condition -> ID . LE NUMBER
    (15) condition -> ID . GT NUMBER
    (16) condition -> ID . GE NUMBER
    (17) condition -> ID . EQ NUMBER
    (18) condition -> ID . NE NUMBER

    LT              shift and go to state 45
    LE              shift and go to state 46
    GT              shift and go to state 47
    GE              shift and go to state 48
    EQ              shift and go to state 49
    NE              shift and go to state 50


state 41

    (10) declaration -> INT ID ASSIGN NUMBER SEMICOLON .

    INT             reduce using rule 10 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    ID              reduce using rule 10 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    FOR             reduce using rule 10 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    RETURN          reduce using rule 10 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)
    RBRACE          reduce using rule 10 (declaration -> INT ID ASSIGN NUMBER SEMICOLON .)


state 42

    (22) expression -> ID MULT_OP NUMBER .

    SEMICOLON       reduce using rule 22 (expression -> ID MULT_OP NUMBER .)


state 43

    (23) expression -> ID PLUS ID .

    SEMICOLON       reduce using rule 23 (expression -> ID PLUS ID .)


state 44

    (12) for_statement -> FOR LPAREN assignment condition SEMICOLON . increment RPAREN LBRACE statements RBRACE
    (19) increment -> . ID PLUS PLUS

    ID              shift and go to state 52

    increment                      shift and go to state 51

state 45

    (13) condition -> ID LT . NUMBER

    NUMBER          shift and go to state 53


state 46

    (14) condition -> ID LE . NUMBER

    NUMBER          shift and go to state 54


state 47

    (15) condition -> ID GT . NUMBER

    NUMBER          shift and go to state 55


state 48

    (16) condition -> ID GE . NUMBER

    NUMBER          shift and go to state 56


state 49

    (17) condition -> ID EQ . NUMBER

    NUMBER          shift and go to state 57


state 50

    (18) condition -> ID NE . NUMBER

    NUMBER          shift and go to state 58


state 51

    (12) for_statement -> FOR LPAREN assignment condition SEMICOLON increment . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 59


state 52

    (19) increment -> ID . PLUS PLUS

    PLUS            shift and go to state 60


state 53

    (13) condition -> ID LT NUMBER .

    SEMICOLON       reduce using rule 13 (condition -> ID LT NUMBER .)


state 54

    (14) condition -> ID LE NUMBER .

    SEMICOLON       reduce using rule 14 (condition -> ID LE NUMBER .)


state 55

    (15) condition -> ID GT NUMBER .

    SEMICOLON       reduce using rule 15 (condition -> ID GT NUMBER .)


state 56

    (16) condition -> ID GE NUMBER .

    SEMICOLON       reduce using rule 16 (condition -> ID GE NUMBER .)


state 57

    (17) condition -> ID EQ NUMBER .

    SEMICOLON       reduce using rule 17 (condition -> ID EQ NUMBER .)


state 58

    (18) condition -> ID NE NUMBER .

    SEMICOLON       reduce using rule 18 (condition -> ID NE NUMBER .)


state 59

    (12) for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 61


state 60

    (19) increment -> ID PLUS . PLUS

    PLUS            shift and go to state 62


state 61

    (12) for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE . statements RBRACE
    (4) statements -> . statement
    (5) statements -> . statement statements
    (6) statement -> . declaration
    (7) statement -> . assignment
    (8) statement -> . for_statement
    (9) statement -> . return_statement
    (10) declaration -> . INT ID ASSIGN NUMBER SEMICOLON
    (11) assignment -> . ID ASSIGN expression SEMICOLON
    (12) for_statement -> . FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (20) return_statement -> . RETURN NUMBER SEMICOLON

    INT             shift and go to state 13
    ID              shift and go to state 20
    FOR             shift and go to state 21
    RETURN          shift and go to state 22

    assignment                     shift and go to state 17
    statements                     shift and go to state 63
    statement                      shift and go to state 15
    declaration                    shift and go to state 16
    for_statement                  shift and go to state 18
    return_statement               shift and go to state 19

state 62

    (19) increment -> ID PLUS PLUS .

    RPAREN          reduce using rule 19 (increment -> ID PLUS PLUS .)


state 63

    (12) for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 64


state 64

    (12) for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE .

    INT             reduce using rule 12 (for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 12 (for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 12 (for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 12 (for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 12 (for_statement -> FOR LPAREN assignment condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)

